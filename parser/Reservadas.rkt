#lang racket

(require peg/peg)
(require "espacos.rkt")
(provide peg-rule:reserv)
(provide peg-rule:var)
(provide peg-rule:const)
(provide peg-rule:bar)
(provide peg-rule:init)
(provide peg-rule:proc)
(provide peg-rule:module)
(provide peg-rule:end)
(provide peg-rule:virg)
(provide peg-rule:pointvirg)
(provide peg-rule:printR)
(provide peg-rule:exitR)
(provide peg-rule:return)
(provide peg-rule:fun)

(define-peg var "var")
(define-peg const "const")
(define-peg bar (and spaces "|" spaces))
(define-peg init "init")
(define-peg proc "proc")
(define-peg fun "fun")
(define-peg module "module")
(define-peg end "end")
(define-peg printR "print")
(define-peg exitR "exit")
(define-peg return "return")
(define-peg virg (and spaces "," spaces))
(define-peg pointvirg (and spaces ";" spaces))
 
(define-peg reserv (or module end proc var init bar const ))
